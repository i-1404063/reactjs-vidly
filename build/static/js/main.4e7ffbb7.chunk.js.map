{"version":3,"sources":["services/logService.js","services/httpService.js","services/movieService.js","services/genreService.js","components/common/pagination.jsx","components/utills/paginate.js","components/common/list-group.jsx","services/authService.js","components/common/like.jsx","components/common/tableHeader.jsx","components/tableBody.jsx","components/common/table.jsx","components/moviesTable.jsx","components/common/search.jsx","components/movies.jsx","components/customer.jsx","components/rental.jsx","components/not-found.jsx","components/moviesNavbar.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/loginForm.jsx","services/userService.js","components/register.jsx","components/movieForm.jsx","components/logout.jsx","components/common/protectedRoute.jsx","App.js","index.js"],"names":["init","log","error","console","axios","defaults","baseURL","process","interceptors","response","use","ex","status","logger","toast","Promise","reject","get","post","put","delete","setJwt","jwt","headers","common","movieUrl","id","saveMovie","movie","_id","body","http","deleteMovie","movieId","getGenres","Pagination","onPageChange","countItem","pageSize","currentPage","pageLength","Math","ceil","pages","_","range","className","map","page","key","style","cursor","onClick","Paginate","items","startIndex","slice","take","value","ListGroup","onItemSelect","textProperty","valueProperty","selectedGenre","item","defaultProps","email","password","a","data","localStorage","setItem","getJwt","getItem","login","loginWithJwt","logout","removeItem","getCurrentUser","jwtDecode","Like","onLike","classes","flag","TableHeader","raiseSort","path","sortColumn","props","order","onSort","arrowClass","column","columns","this","label","Component","TableBody","customElement","content","createKey","Table","MoviesTable","state","to","title","deleteColumn","onDelete","user","auth","isAdmin","push","movies","Search","onChange","type","name","placeholder","e","currentTarget","Movies","genres","searchQuery","handleDelete","originalMovies","filter","m","setState","handleLike","index","indexOf","handlePageChange","handleGenreSelect","genre","handleSearch","query","handleSort","getPageData","allMovies","filtered","toLowerCase","startsWith","orderBy","totalCount","length","Fragment","Customer","Rental","NotFound","MoviesNavbar","Input","rest","htmlFor","Select","options","Form","errors","validateProperty","obj","schema","Joi","validate","details","message","handleChange","input","errorMessage","Validate","abortEarly","handleSubmit","event","preventDefault","doSubmit","renderButton","disabled","renderInput","renderSelect","LoginForm","username","string","required","location","window","from","pathname","onSubmit","register","Register","userService","MovieForm","genreId","numberInStock","dailyRentalRate","number","integer","min","max","mapToViewModel","history","match","params","replace","populateGenres","populateMovie","Logout","ProtectedRoute","component","render","App","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4e7ffbb7.chunk.js","sourcesContent":["function init() {}\r\n\r\nfunction log(error) {\r\n  console.error(error);\r\n}\r\n\r\nexport default {\r\n  init,\r\n  log,\r\n};\r\n","import axios from \"axios\";\r\nimport logger from \"./logService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.response.use(null, ex => {\r\n  const expectedError =\r\n    ex.response && ex.response.status >= 400 && ex.response.status < 500;\r\n\r\n  if (!expectedError) {\r\n    logger.log(ex);\r\n    toast.error(\"an unexpected error occured\");\r\n  }\r\n\r\n  return Promise.reject(ex);\r\n});\r\n\r\nexport function setJwt(jwt) {\r\n  //adding header to all kind of request\r\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\r\n}\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n  setJwt,\r\n};\r\n","import http from \"./httpService\";\r\n// import { apiUrl } from \"../config.json\";\r\n\r\nconst apiEndPoint = \"movies\";\r\n\r\nfunction movieUrl(id) {\r\n  return `${apiEndPoint}/${id}`;\r\n}\r\n\r\nexport function getMovies() {\r\n  return http.get(apiEndPoint);\r\n}\r\n\r\nexport function getMovie(id) {\r\n  return http.get(movieUrl(id));\r\n}\r\n\r\nexport function saveMovie(movie) {\r\n  if (movie._id) {\r\n    const body = { ...movie };\r\n    delete body._id;\r\n    return http.put(movieUrl(movie._id), body);\r\n  }\r\n\r\n  return http.post(apiEndPoint, movie);\r\n}\r\n\r\nexport function deleteMovie(movieId) {\r\n  return http.delete(movieUrl(movieId));\r\n}\r\n","import http from \"./httpService\";\r\n// import { apiUrl } from \"../config.json\";\r\nconst apiEndPoint = \"genres\";\r\n\r\nexport function getGenres() {\r\n  return http.get(apiEndPoint);\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport _ from 'lodash';\r\nimport PropTypes from 'prop-types';\r\n\r\n///stateless functional component\r\nconst Pagination = ({ onPageChange, countItem, pageSize, currentPage }) => {\r\n  const pageLength = Math.ceil(countItem / pageSize);\r\n  if (pageLength === 1) return null;\r\n  const pages = _.range(1, pageLength + 1);\r\n\r\n  return (\r\n    <nav className='page'>\r\n      <ul className='pagination'>\r\n        {pages.map(page => (\r\n          <li\r\n            key={page}\r\n            style={{ cursor: 'pointer' }}\r\n            className={currentPage === page ? 'page-item active' : 'page-item'}>\r\n            <Link onClick={() => onPageChange(page)} className='page-link'>\r\n              {page}\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  onPageChange: PropTypes.func.isRequired,\r\n  countItem: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n};\r\nexport default Pagination;\r\n","import _ from \"lodash\";\r\n\r\nexport function Paginate(items, pageSize, currentPage) {\r\n    const startIndex = (currentPage - 1) * pageSize;\r\n    const movies = _(items).slice(startIndex).take(pageSize).value();\r\n\r\n    return movies;\r\n}","import React from 'react';\r\n\r\nconst ListGroup = ({\r\n  items,\r\n  onItemSelect,\r\n  textProperty,\r\n  valueProperty,\r\n  selectedGenre,\r\n}) => {\r\n  return (\r\n    <ul className='list-group'>\r\n      {items.map(item => (\r\n        <li\r\n          key={item[valueProperty]}\r\n          onClick={() => onItemSelect(item)}\r\n          style={{ cursor: 'pointer' }}\r\n          className={\r\n            item === selectedGenre\r\n              ? 'list-group-item active clickable'\r\n              : 'list-group-item clickable'\r\n          }>\r\n          {item[textProperty]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nListGroup.defaultProps = {\r\n  textProperty: 'name',\r\n  valueProperty: '_id',\r\n};\r\n\r\nexport default ListGroup;\r\n","import http from \"./httpService\";\r\n// import config from \"../config.json\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst apiEndPoint = \"auth\";\r\nconst tokenKey = \"token\";\r\n\r\nhttp.setJwt(getJwt());\r\n\r\nexport async function login(email, password) {\r\n  const { data: jwt } = await http.post(apiEndPoint, { email, password });\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function loginWithJwt(jwt) {\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getCurrentUser() {\r\n  try {\r\n    const jwt = localStorage.getItem(tokenKey);\r\n    return jwtDecode(jwt);\r\n  } catch (ex) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function getJwt() {\r\n  return localStorage.getItem(tokenKey);\r\n}\r\n\r\nexport default {\r\n  login,\r\n  loginWithJwt,\r\n  logout,\r\n  getCurrentUser,\r\n  getJwt,\r\n};\r\n","import React from \"react\";\r\n\r\nconst Like = ({ onLike, movie }) => {\r\n  let classes = \"fa fa-heart\";\r\n  if (!movie.flag) classes += \"-o\";\r\n\r\n  return (\r\n    <i\r\n      onClick={() => onLike(movie)}\r\n      style={{ cursor: \"pointer\" }}\r\n      className={classes}\r\n    ></i>\r\n  );\r\n};\r\n\r\nexport default Like;\r\n","import React, { Component } from \"react\";\r\n\r\nclass TableHeader extends Component {\r\n  raiseSort = path => {\r\n    const sortColumn = { ...this.props.sortColumn };\r\n    if (sortColumn.path === path) {\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    } else {\r\n      sortColumn.path = path;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n\r\n    this.props.onSort(sortColumn);\r\n  };\r\n\r\n  arrowClass = column => {\r\n    const { sortColumn } = this.props;\r\n    if (column.path !== sortColumn.path) return null;\r\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\"></i>;\r\n\r\n    return <i className=\"fa fa-sort-desc\"></i>;\r\n  };\r\n\r\n  render() {\r\n    const { columns } = this.props;\r\n\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {columns.map(column => (\r\n            <th\r\n              className=\"clickable\"\r\n              style={{ cursor: \"pointer\" }}\r\n              key={column.path || column.key}\r\n              onClick={() => this.raiseSort(column.path)}>\r\n              {column.label} {this.arrowClass(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\n// import { NavLink } from \"react-router-dom\";\r\n\r\nclass TableBody extends Component {\r\n  //Rendering custom element from local state\r\n  customElement = (item, column) => {\r\n    if (column.content) return column.content(item);\r\n    /// we can use this also instead of adding content in column\r\n    // if (column.path === \"title\")\r\n    //   return (\r\n    //     <NavLink to={`/movies/${item._id}`}>{_.get(item, column.path)}</NavLink>\r\n    //   );\r\n    return _.get(item, column.path);\r\n  };\r\n\r\n  createKey = (item, column) => {\r\n    return item[this.props.valueProperty] + (column.path || column.key);\r\n  };\r\n\r\n  render() {\r\n    const { data, columns, valueProperty } = this.props;\r\n\r\n    return (\r\n      <tbody>\r\n        {data.map(item => (\r\n          <tr key={item[valueProperty]}>\r\n            {columns.map(column => (\r\n              <td key={this.createKey(item, column)}>\r\n                {this.customElement(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nTableBody.defaultProps = {\r\n  valueProperty: '_id',\r\n};\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from \"../tableBody\";\r\n\r\nconst Table = ({ data, columns, sortColumn, onSort }) => {\r\n  return (\r\n    <table className=\"table\">\r\n      <TableHeader sortColumn={sortColumn} onSort={onSort} columns={columns} />\r\n      <TableBody data={data} columns={columns} />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { Component } from \"react\";\r\nimport auth from \"../services/authService\";\r\nimport Like from \"./common/like\";\r\nimport Table from \"./common/table\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass MoviesTable extends Component {\r\n  state = {\r\n    columns: [\r\n      {\r\n        path: \"title\",\r\n        label: \"Title\",\r\n        content: movie => (\r\n          <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\r\n        ),\r\n      },\r\n      { path: \"genre.name\", label: \"Genre\" },\r\n      { path: \"numberInStock\", label: \"Stock\" },\r\n      { path: \"dailyRentalRate\", label: \"Rate\" },\r\n      {\r\n        key: \"like\",\r\n        content: movie => <Like onLike={this.props.onLike} movie={movie} />,\r\n      },\r\n    ],\r\n  };\r\n\r\n  deleteColumn = {\r\n    key: \"delete\",\r\n    content: movie => (\r\n      <button\r\n        onClick={() => this.props.onDelete(movie)}\r\n        className=\"btn btn-danger btn-sm\">\r\n        Delete\r\n      </button>\r\n    ),\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    const user = auth.getCurrentUser();\r\n    if (user && user.isAdmin) {\r\n      this.state.columns.push(this.deleteColumn);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { movies, sortColumn, onSort } = this.props;\r\n\r\n    return (\r\n      <Table\r\n        data={movies}\r\n        sortColumn={sortColumn}\r\n        onSort={onSort}\r\n        columns={this.state.columns}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesTable;\r\n","import React from 'react';\r\n\r\nconst Search = ({ value, onChange }) => {\r\n  return (\r\n    <input\r\n      type='search'\r\n      name='query'\r\n      placeholder='Search...'\r\n      className='form-control my-3'\r\n      value={value}\r\n      onChange={e => onChange(e.currentTarget.value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getMovies, deleteMovie } from \"../services/movieService\";\r\nimport { getGenres } from \"../services/genreService\";\r\nimport Pagination from \"./common/pagination\";\r\nimport { Paginate } from \"./utills/paginate\";\r\nimport ListGroup from \"./common/list-group\";\r\nimport MoviesTable from \"./moviesTable\";\r\nimport _ from \"lodash\";\r\nimport Search from \"./common/search\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    genres: [],\r\n    pageSize: 4,\r\n    currentPage: 1,\r\n    searchQuery: \"\",\r\n    selectedGenre: null,\r\n    sortColumn: { path: \"title\", order: \"asc\" },\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { data: genre } = await getGenres();\r\n    const { data: movies } = await getMovies();\r\n\r\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...genre];\r\n    this.setState({ movies, genres });\r\n  }\r\n\r\n  handleDelete = async movie => {\r\n    const originalMovies = this.state.movies;\r\n    const movies = originalMovies.filter(m => m._id !== movie._id);\r\n\r\n    this.setState({ movies });\r\n\r\n    try {\r\n      await deleteMovie(movie._id);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404) {\r\n        toast.error(\"This movie has already been deleted\");\r\n      }\r\n\r\n      this.setState({ movies: originalMovies });\r\n    }\r\n  };\r\n\r\n  handleLike = movie => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movies[index] = { ...movie };\r\n    movies[index].flag = !movies[index].flag;\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handlePageChange = page => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleGenreSelect = genre => {\r\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\r\n  };\r\n\r\n  handleSearch = query => {\r\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\r\n  };\r\n\r\n  handleSort = sortColumn => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  getPageData = () => {\r\n    const {\r\n      currentPage,\r\n      sortColumn,\r\n      pageSize,\r\n      movies: allMovies,\r\n      selectedGenre,\r\n      searchQuery,\r\n    } = this.state;\r\n\r\n    let filtered = allMovies;\r\n    if (searchQuery)\r\n      filtered = allMovies.filter(m =>\r\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    else if (selectedGenre && selectedGenre._id)\r\n      filtered = allMovies.filter(m => m.genre._id === selectedGenre._id);\r\n\r\n    const sortMovies = _.orderBy(\r\n      filtered,\r\n      [sortColumn.path],\r\n      [sortColumn.order]\r\n    );\r\n\r\n    const movies = Paginate(sortMovies, pageSize, currentPage);\r\n\r\n    return { totalCount: filtered.length, data: movies };\r\n  };\r\n\r\n  render() {\r\n    const { length: count } = this.state.movies;\r\n    const {\r\n      currentPage,\r\n      sortColumn,\r\n      pageSize,\r\n      genres,\r\n      selectedGenre,\r\n      searchQuery,\r\n    } = this.state;\r\n\r\n    const { user } = this.props;\r\n\r\n    const { totalCount, data: movies } = this.getPageData();\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <main className=\"container mt-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-3\">\r\n              <ListGroup\r\n                items={genres}\r\n                onItemSelect={this.handleGenreSelect}\r\n                selectedGenre={selectedGenre}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-9\">\r\n              {user && (\r\n                <Link to=\"/movies/new\" className=\"btn btn-primary mb-2\">\r\n                  New Movie\r\n                </Link>\r\n              )}\r\n              <p>Showing {totalCount} movies in the database.</p>\r\n              <Search onChange={this.handleSearch} value={searchQuery} />\r\n              <MoviesTable\r\n                movies={movies}\r\n                onLike={this.handleLike}\r\n                onDelete={this.handleDelete}\r\n                onSort={this.handleSort}\r\n                sortColumn={sortColumn}\r\n              />\r\n              <Pagination\r\n                onPageChange={this.handlePageChange}\r\n                pageSize={pageSize}\r\n                currentPage={currentPage}\r\n                countItem={totalCount}\r\n              />\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import React from \"react\";\r\n\r\nconst Customer = () => {\r\n  return <h1>Customers</h1>;\r\n};\r\n\r\nexport default Customer;\r\n","import React from \"react\";\r\n\r\nconst Rental = () => {\r\n  return <h1>Rentals</h1>;\r\n};\r\n\r\nexport default Rental;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return <h1>Not Found</h1>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\n\r\nconst MoviesNavbar = ({ user }) => {\r\n  return (\r\n    <nav className='navbar navbar-expand navbar-dark bg-dark'>\r\n      <Link className='navbar-brand' to='/'>\r\n        Vidly\r\n      </Link>\r\n      <ul className='navbar-nav'>\r\n        <NavLink className='nav-item nav-link' to='/movies'>\r\n          Movies\r\n        </NavLink>\r\n\r\n        <NavLink className='nav-item nav-link' to='/customer'>\r\n          Customers\r\n        </NavLink>\r\n\r\n        <NavLink className='nav-item nav-link' to='/rental'>\r\n          Rentals\r\n        </NavLink>\r\n\r\n        {!user && (\r\n          <React.Fragment>\r\n            <NavLink className='nav-item nav-link' to='/loginForm'>\r\n              Login\r\n            </NavLink>\r\n\r\n            <NavLink className='nav-item nav-link' to='/register'>\r\n              Register\r\n            </NavLink>\r\n          </React.Fragment>\r\n        )}\r\n        {user && (\r\n          <React.Fragment>\r\n            <NavLink className='nav-item nav-link' to='/profile'>\r\n              {user.name}\r\n            </NavLink>\r\n\r\n            <NavLink className='nav-item nav-link' to='/logout'>\r\n              Logout\r\n            </NavLink>\r\n          </React.Fragment>\r\n        )}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default MoviesNavbar;\r\n","import React from \"react\";\r\n\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input {...rest} name={name} id={name} className=\"form-control\" />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\n\r\nconst Select = ({ name, label, error, options, ...rest }) => {\r\n  return (\r\n    <div className='form-group'>\r\n      <label htmlFor={name}>{label}</label>\r\n      <select {...rest} name={name} id={name} className='custom-select'>\r\n        <option value='' />\r\n        {options.map(item => (\r\n          <option key={item._id} value={item._id}>\r\n            {item.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && <div className='alert alert-danger'>{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { Component } from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Input from './input';\r\nimport Select from './select';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {},\r\n  };\r\n\r\n  validateProperty = ({ value, name }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const { errors } = this.state;\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  Validate = () => {\r\n    const options = { abortEarly: false };\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of error.details) {\r\n      errors[item.path[0]] = item.message;\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const errors = this.Validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n    /// call the server\r\n    this.doSubmit();\r\n  };\r\n\r\n  renderButton = label => {\r\n    return (\r\n      <button disabled={this.Validate()} className='btn btn-primary'>\r\n        {label}\r\n      </button>\r\n    );\r\n  };\r\n\r\n  renderInput = (name, label, type = 'text') => {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Input\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        type={type}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  };\r\n\r\n  renderSelect = (name, label, options) => {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Select\r\n        value={data[name]}\r\n        error={errors[name]}\r\n        options={options}\r\n        name={name}\r\n        label={label}\r\n        genres={this.getGenres}\r\n        onChange={this.handleChange}\r\n      />\r\n    );\r\n  };\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Form from \"./common/form\";\r\nimport Joi from \"joi-browser\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass LoginForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\" },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string().required().label(\"Username\"),\r\n    password: Joi.string().required().label(\"Password\"),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const { data } = this.state;\r\n      await auth.login(data.username, data.password);\r\n\r\n      const { state } = this.props.location;\r\n      window.location = state ? state.from.pathname : \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (auth.getCurrentUser()) return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n      <div className=\"mt-3\">\r\n        <h1>Login</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderButton(\"Login\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import http from \"./httpService\";\r\n// import { apiUrl } from \"../config.json\";\r\n\r\nconst apiEndPoint = \"users\";\r\n\r\nexport function register(user) {\r\n  return http.post(apiEndPoint, {\r\n    email: user.username,\r\n    password: user.password,\r\n    name: user.name,\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport * as userService from \"../services/userService\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass Register extends Form {\r\n  state = {\r\n    data: {\r\n      username: \"\",\r\n      password: \"\",\r\n      name: \"\",\r\n    },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string().email().required().label(\"Username\"),\r\n    password: Joi.string().required().label(\"Password\"),\r\n    name: Joi.string().required().label(\"Name\"),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const response = await userService.register(this.state.data);\r\n      auth.loginWithJwt(response.headers[\"x-auth-token\"]);\r\n      window.location = \"/\"; ///full application reload\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"mt-3\">\r\n        <h1>Register</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderInput(\"name\", \"Name\")}\r\n          {this.renderButton(\"Register\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React from 'react';\r\nimport Form from './common/form';\r\nimport Joi from 'joi-browser';\r\nimport { getMovie, saveMovie } from '../services/movieService';\r\nimport { getGenres } from '../services/genreService';\r\n\r\nclass MovieForm extends Form {\r\n  state = {\r\n    data: {\r\n      title: '',\r\n      genreId: '',\r\n      numberInStock: '',\r\n      dailyRentalRate: '',\r\n    },\r\n    genres: [],\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    title: Joi.string().required().label('Title'),\r\n    genreId: Joi.string().required().label('Genre'),\r\n    numberInStock: Joi.number()\r\n      .integer()\r\n      .min(0)\r\n      .max(100)\r\n      .required()\r\n      .label('Number in Stock'),\r\n    dailyRentalRate: Joi.number().min(0).max(10).required().label('DailyRate'),\r\n  };\r\n\r\n  async populateGenres() {\r\n    const { data: genres } = await getGenres();\r\n    this.setState({ genres });\r\n  }\r\n\r\n  async populateMovie() {\r\n    try {\r\n      const movieId = this.props.match.params.id;\r\n      if (movieId === 'new') return;\r\n\r\n      const { data: movie } = await getMovie(movieId);\r\n      this.setState({ data: this.mapToViewModel(movie) });\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        this.props.history.replace('/not-found');\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.populateGenres();\r\n    await this.populateMovie();\r\n  }\r\n\r\n  mapToViewModel = movie => {\r\n    return {\r\n      _id: movie._id,\r\n      title: movie.title,\r\n      genreId: movie.genre._id,\r\n      numberInStock: movie.numberInStock,\r\n      dailyRentalRate: movie.dailyRentalRate,\r\n    };\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    await saveMovie(this.state.data);\r\n\r\n    this.props.history.push('/movies');\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Movie Form</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput('title', 'Title')}\r\n          {this.renderSelect('genreId', 'Genre', this.state.genres)}\r\n          {this.renderInput('numberInStock', 'Number in Stock', 'number')}\r\n          {this.renderInput('dailyRentalRate', 'DailyRate')}\r\n          {this.renderButton('Save')}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieForm;\r\n","import { Component } from \"react\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    auth.logout(); /// removing token\r\n    window.location = \"/\";\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport auth from \"../../services/authService\";\r\n\r\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (!auth.getCurrentUser())\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/loginForm\",\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n          );\r\n        return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { Component } from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Movies from \"./components/movies\";\nimport Customer from \"./components/customer\";\nimport Rental from \"./components/rental\";\nimport NotFound from \"./components/not-found\";\nimport MoviesNavbar from \"./components/moviesNavbar\";\nimport LoginForm from \"./components/loginForm\";\nimport Register from \"./components/register\";\nimport MovieForm from \"./components/movieForm\";\nimport Logout from \"./components/logout\";\nimport auth from \"./services/authService\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport ProtectedRoute from \"./components/common/protectedRoute\";\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <MoviesNavbar user={user} />\n        <main className=\"container\">\n          <Switch>\n            <Route path=\"/register\" component={Register} />\n            <Route path=\"/loginForm\" component={LoginForm} />\n            <Route path=\"/logout\" component={Logout} />\n            <ProtectedRoute path=\"/movies/:id\" component={MovieForm} />\n            <Route\n              path=\"/movies\"\n              render={props => <Movies {...props} user={user} />}></Route>\n            <Route path=\"/customer\" component={Customer}></Route>\n            <Route path=\"/rental\" component={Rental}></Route>\n            <Route path=\"/not-found\" component={NotFound}></Route>\n            <Redirect exact from=\"/\" to=\"/movies\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}